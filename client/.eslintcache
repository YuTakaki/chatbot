[{"C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\index.js":"1","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\App.js":"2","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\components\\home.js":"4","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\components\\strangerChats\\stranger_chatbot.js":"5","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\components\\groupChats\\group_chatbot.js":"6","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\components\\socket.js":"7","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\context\\interests.js":"8","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\context\\reducers\\interest_reducer.js":"9","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\context\\group.js":"10","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\context\\reducers\\group_reducer.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":838,"mtime":1611306617181,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":2352,"mtime":1611899113234,"results":"16","hashOfConfig":"13"},{"size":4743,"mtime":1612373364050,"results":"17","hashOfConfig":"13"},{"size":3997,"mtime":1612254471290,"results":"18","hashOfConfig":"13"},{"size":86,"mtime":1611255272803,"results":"19","hashOfConfig":"13"},{"size":558,"mtime":1611298914759,"results":"20","hashOfConfig":"13"},{"size":198,"mtime":1611297631161,"results":"21","hashOfConfig":"13"},{"size":521,"mtime":1611306719839,"results":"22","hashOfConfig":"13"},{"size":195,"mtime":1611308723400,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"r82swn",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\index.js",[],["50","51"],"C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\App.js",["52","53"],"import axios from 'axios';\nimport React, {useEffect} from 'react';\nimport Home from './components/home';\nimport {HashRouter as Router, Route} from 'react-router-dom'\nimport StrangerChatBot from './components/strangerChats/stranger_chatbot';\nimport GroupChatBot from './components/groupChats/group_chatbot';\nimport InterestContext from './context/interests';\nimport GroupChatContext from './context/group';\n\nconst App = () => {\n\n\n  return (\n    <div className=\"App\">\n      <GroupChatContext>\n        <InterestContext>\n          <Router>\n            <Route exact path='/' component={Home} />\n            <Route path='/stranger-chatbot' component={StrangerChatBot} />\n            <Route path='/group' component={GroupChatBot} />\n          </Router>\n        </InterestContext>\n      </GroupChatContext>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\components\\home.js",["54","55"],"import {useRef, useContext} from 'react';\r\nimport stranger from '../assets/stranger.png';\r\nimport group from '../assets/group.png';\r\nimport '../styles/home.scss'\r\nimport { INTERESTS } from '../context/interests';\r\nimport { GROUP } from '../context/group';\r\n\r\nconst Home = (props) => {\r\n    const interests = useRef();\r\n    const groupName = useRef();\r\n    const {interest_dispatch} = useContext(INTERESTS);\r\n    const {group_dispatch} = useContext(GROUP);\r\n\r\n    const onToGroupChatBox = (e) => {\r\n        e.preventDefault();\r\n        if(groupName.current.value !== ''){\r\n            group_dispatch({type: 'SET_GROUPNAME', data : groupName.current.value});\r\n            props.history.push('/group');\r\n        }else{\r\n            alert('group name should not be empty');\r\n        }\r\n        \r\n        \r\n    }\r\n    const onToStrangerChatBox = (e) => {\r\n        e.preventDefault();\r\n        const interest = interests.current.value.split(\" \");\r\n        interest_dispatch({type: 'SET_INTERESTS', data : interest})\r\n        props.history.push('/stranger-chatbot');\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div className='home'>\r\n                <header>\r\n                    <h1>ChatBot</h1>\r\n                </header>\r\n                <div className='chat-option'>\r\n                    <div className='stranger-chatBot'>\r\n                        <h2>Stranger ChatBot</h2>\r\n                        <img src={stranger} />\r\n                        <p>Talk to stranger with matching interest</p>\r\n                        <form onSubmit={onToStrangerChatBox}>\r\n                            <input ref={interests} type='text' />\r\n                            <input type='submit' value='Talk to stranger' />\r\n                        </form>\r\n\r\n                    </div>\r\n                    <div className='groupChat-chatBot'>\r\n                        <h2>Group ChatBot</h2>\r\n                        <img src={group} />\r\n                        <p>Join a group chat that has the same interest as you</p>\r\n                        <form onSubmit={onToGroupChatBox}>\r\n                            <input ref={groupName} type='text' />\r\n                            <input type='submit' value='Join Group' />\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\components\\strangerChats\\stranger_chatbot.js",["56"],"C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\components\\groupChats\\group_chatbot.js",["57","58"],"import {useEffect, useContext, useRef, memo, useState} from 'react';\r\nimport { GROUP } from '../../context/group';\r\nimport '../../styles/groupChatBot.scss';\r\nimport { socket } from '../socket';\r\nconst randomUsername = () => {\r\n    const number = [...Array(10)].map((num, i) => i.toString() );\r\n    const bigLetter = [...Array(26)].map((num, i) => String.fromCharCode(i + 65));\r\n    const smallLetter = bigLetter.map(letter => letter.toLowerCase());\r\n    const random = [...number, ...bigLetter, ...smallLetter];\r\n    let user = '';\r\n    for (let i = 0; i < 7; i++){\r\n        const index =Math.floor(Math.random() * random.length);\r\n        user += random[index]  \r\n    }\r\n    return user\r\n}\r\nconst GroupChatBot = (props) => {\r\n    const {group, group_dispatch} = useContext(GROUP);\r\n    const [username, setUsername] = useState(randomUsername());\r\n    const [chats, setChats] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const chatInput = useRef();\r\n    const roomInput = useRef();\r\n    const leaveRoom = () => {\r\n        props.history.push('/')\r\n    }\r\n    useEffect(()=>{\r\n        socket.connect();\r\n        socket.emit('joinGroupChatbox', {groupName : group, username});\r\n        socket.emit('getUsers', group);\r\n        \r\n        return () => {\r\n            socket.emit('disconnectGroupchatRoom', group);\r\n            socket.disconnect();\r\n        }\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        socket.on('sending', message => {\r\n            console.log(chats);\r\n            setChats([...chats, message]);\r\n        });\r\n        socket.on('users', users => {\r\n            setUsers(users);\r\n        });\r\n        return () => {\r\n            socket.off('sending');\r\n            socket.off('users');\r\n        }\r\n    });\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        if(chatInput.current.value.length > 0){\r\n            socket.emit('sendMessage', {message: chatInput.current.value, username});\r\n        }\r\n    }\r\n\r\n    const changeRoom = e => {\r\n        e.preventDefault();\r\n        socket.emit('disconnectGroupchatRoom', group);\r\n        group_dispatch({type:'SET_GROUPNAME', data: roomInput.current.value});\r\n        setChats([]);\r\n        socket.emit('joinGroupChatbox', {groupName : roomInput.current.value, username});\r\n        socket.emit('getUsers', roomInput.current.value);\r\n        roomInput.current.value = '';\r\n\r\n    }\r\n    return(\r\n        <div className='group-chatbox'>\r\n            <div className='box1'>\r\n            <h2>{users.length === 0 ? 'No one is here yet' : `${users.length} users are in the room`}</h2>\r\n                <div className='users'>\r\n                    \r\n                    {users.map(user => (\r\n                        <p>{user.username}</p>\r\n                    ))}\r\n\r\n                </div>\r\n                <form onSubmit={changeRoom}>\r\n                    <input ref={roomInput} type='text'/>\r\n                    <input type='submit' value='Join another Room' />\r\n                </form>\r\n                <button onClick={leaveRoom}>Leave Room</button>\r\n            </div>\r\n            <div className='box2'>\r\n                <div className='chatbox'>\r\n                    {chats.map(chat => (\r\n                        <div className={chat.username === username ? 'users-message-content' : 'others-message-content'}>\r\n                            <p>{chat.username}</p>\r\n                            <div className='message'>\r\n                                <p>{chat.message}</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                    ))}\r\n                </div>\r\n                <form onSubmit={sendMessage}>\r\n                    <textarea ref={chatInput}></textarea>\r\n                    <label htmlFor='send'><i className='fa fa-send-o'></i></label>\r\n                    <input type='submit' id='send' />\r\n                    \r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(GroupChatBot)\r\n","C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\components\\socket.js",[],"C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\context\\interests.js",[],"C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\context\\reducers\\interest_reducer.js",[],"C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\context\\group.js",[],"C:\\Users\\Yu Takaki\\Desktop\\Java Script\\project\\randomChat\\client\\src\\context\\reducers\\group_reducer.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":13},{"ruleId":"63","severity":1,"message":"67","line":2,"column":16,"nodeType":"65","messageId":"66","endLine":2,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":42,"column":25,"nodeType":"70","endLine":42,"endColumn":47},{"ruleId":"68","severity":1,"message":"69","line":52,"column":25,"nodeType":"70","endLine":52,"endColumn":44},{"ruleId":"71","severity":1,"message":"72","line":62,"column":7,"nodeType":"73","endLine":62,"endColumn":9,"suggestions":"74"},{"ruleId":"63","severity":1,"message":"75","line":19,"column":22,"nodeType":"65","messageId":"66","endLine":19,"endColumn":33},{"ruleId":"71","severity":1,"message":"76","line":37,"column":8,"nodeType":"73","endLine":37,"endColumn":10,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'interest'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'setUsername' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'group' and 'username'. Either include them or remove the dependency array.",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [interest]",{"range":"86","text":"87"},"Update the dependencies array to be: [group, username]",{"range":"88","text":"89"},[2074,2076],"[interest]",[1385,1387],"[group, username]"]